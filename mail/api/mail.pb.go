// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mail.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	mail.proto

It has these top-level messages:
	VerificationRequest
	VerificationResponse
	MailRequest
	MailResponse
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type VerificationRequest_Purpose int32

const (
	VerificationRequest_CONFIRMATION   VerificationRequest_Purpose = 0
	VerificationRequest_PASSWORD_RESET VerificationRequest_Purpose = 1
)

var VerificationRequest_Purpose_name = map[int32]string{
	0: "CONFIRMATION",
	1: "PASSWORD_RESET",
}
var VerificationRequest_Purpose_value = map[string]int32{
	"CONFIRMATION":   0,
	"PASSWORD_RESET": 1,
}

func (x VerificationRequest_Purpose) String() string {
	return proto.EnumName(VerificationRequest_Purpose_name, int32(x))
}
func (VerificationRequest_Purpose) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

type VerificationRequest struct {
	Token   string                      `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Purpose VerificationRequest_Purpose `protobuf:"varint,2,opt,name=purpose,enum=api.VerificationRequest_Purpose" json:"purpose,omitempty"`
}

func (m *VerificationRequest) Reset()                    { *m = VerificationRequest{} }
func (m *VerificationRequest) String() string            { return proto.CompactTextString(m) }
func (*VerificationRequest) ProtoMessage()               {}
func (*VerificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *VerificationRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *VerificationRequest) GetPurpose() VerificationRequest_Purpose {
	if m != nil {
		return m.Purpose
	}
	return VerificationRequest_CONFIRMATION
}

type VerificationResponse struct {
	Email string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Id    uint32 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
}

func (m *VerificationResponse) Reset()                    { *m = VerificationResponse{} }
func (m *VerificationResponse) String() string            { return proto.CompactTextString(m) }
func (*VerificationResponse) ProtoMessage()               {}
func (*VerificationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *VerificationResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *VerificationResponse) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MailRequest struct {
	Email string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Id    uint32 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Name  string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (m *MailRequest) Reset()                    { *m = MailRequest{} }
func (m *MailRequest) String() string            { return proto.CompactTextString(m) }
func (*MailRequest) ProtoMessage()               {}
func (*MailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MailRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *MailRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MailRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MailResponse struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Code   int32  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
}

func (m *MailResponse) Reset()                    { *m = MailResponse{} }
func (m *MailResponse) String() string            { return proto.CompactTextString(m) }
func (*MailResponse) ProtoMessage()               {}
func (*MailResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MailResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MailResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func init() {
	proto.RegisterType((*VerificationRequest)(nil), "api.VerificationRequest")
	proto.RegisterType((*VerificationResponse)(nil), "api.VerificationResponse")
	proto.RegisterType((*MailRequest)(nil), "api.MailRequest")
	proto.RegisterType((*MailResponse)(nil), "api.MailResponse")
	proto.RegisterEnum("api.VerificationRequest_Purpose", VerificationRequest_Purpose_name, VerificationRequest_Purpose_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Mail service

type MailClient interface {
	SendConfirmation(ctx context.Context, in *MailRequest, opts ...grpc.CallOption) (*MailResponse, error)
	SendPasswordReset(ctx context.Context, in *MailRequest, opts ...grpc.CallOption) (*MailResponse, error)
	VerifyToken(ctx context.Context, in *VerificationRequest, opts ...grpc.CallOption) (*VerificationResponse, error)
}

type mailClient struct {
	cc *grpc.ClientConn
}

func NewMailClient(cc *grpc.ClientConn) MailClient {
	return &mailClient{cc}
}

func (c *mailClient) SendConfirmation(ctx context.Context, in *MailRequest, opts ...grpc.CallOption) (*MailResponse, error) {
	out := new(MailResponse)
	err := grpc.Invoke(ctx, "/api.Mail/SendConfirmation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailClient) SendPasswordReset(ctx context.Context, in *MailRequest, opts ...grpc.CallOption) (*MailResponse, error) {
	out := new(MailResponse)
	err := grpc.Invoke(ctx, "/api.Mail/SendPasswordReset", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailClient) VerifyToken(ctx context.Context, in *VerificationRequest, opts ...grpc.CallOption) (*VerificationResponse, error) {
	out := new(VerificationResponse)
	err := grpc.Invoke(ctx, "/api.Mail/VerifyToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Mail service

type MailServer interface {
	SendConfirmation(context.Context, *MailRequest) (*MailResponse, error)
	SendPasswordReset(context.Context, *MailRequest) (*MailResponse, error)
	VerifyToken(context.Context, *VerificationRequest) (*VerificationResponse, error)
}

func RegisterMailServer(s *grpc.Server, srv MailServer) {
	s.RegisterService(&_Mail_serviceDesc, srv)
}

func _Mail_SendConfirmation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailServer).SendConfirmation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Mail/SendConfirmation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailServer).SendConfirmation(ctx, req.(*MailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mail_SendPasswordReset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailServer).SendPasswordReset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Mail/SendPasswordReset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailServer).SendPasswordReset(ctx, req.(*MailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mail_VerifyToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailServer).VerifyToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Mail/VerifyToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailServer).VerifyToken(ctx, req.(*VerificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mail_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Mail",
	HandlerType: (*MailServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendConfirmation",
			Handler:    _Mail_SendConfirmation_Handler,
		},
		{
			MethodName: "SendPasswordReset",
			Handler:    _Mail_SendPasswordReset_Handler,
		},
		{
			MethodName: "VerifyToken",
			Handler:    _Mail_VerifyToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mail.proto",
}

func init() { proto.RegisterFile("mail.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x4d, 0x4f, 0x02, 0x31,
	0x10, 0x65, 0xf9, 0x8c, 0x03, 0x92, 0x65, 0x24, 0x66, 0xe5, 0x44, 0x7a, 0xe2, 0xb4, 0x26, 0x78,
	0x92, 0x78, 0x21, 0x80, 0x86, 0x03, 0x1f, 0xe9, 0x12, 0x3d, 0x9a, 0xca, 0x96, 0xa4, 0x11, 0xda,
	0xba, 0x2d, 0x31, 0xfe, 0x13, 0xff, 0x8f, 0x7f, 0xcc, 0x6c, 0x77, 0x49, 0x30, 0xc1, 0xe8, 0x6d,
	0x66, 0x3a, 0xef, 0xcd, 0x9b, 0x37, 0x05, 0xd8, 0x31, 0xb1, 0x0d, 0x75, 0xa2, 0xac, 0xc2, 0x12,
	0xd3, 0x82, 0x7c, 0x7a, 0x70, 0xf1, 0xc8, 0x13, 0xb1, 0x11, 0x6b, 0x66, 0x85, 0x92, 0x94, 0xbf,
	0xed, 0xb9, 0xb1, 0xd8, 0x86, 0x8a, 0x55, 0xaf, 0x5c, 0x06, 0x5e, 0xd7, 0xeb, 0x9d, 0xd1, 0x2c,
	0xc1, 0x01, 0xd4, 0xf4, 0x3e, 0xd1, 0xca, 0xf0, 0xa0, 0xd8, 0xf5, 0x7a, 0xcd, 0x7e, 0x37, 0x64,
	0x5a, 0x84, 0x27, 0x08, 0xc2, 0x65, 0xd6, 0x47, 0x0f, 0x00, 0x72, 0x0d, 0xb5, 0xbc, 0x86, 0x3e,
	0x34, 0x46, 0x8b, 0xf9, 0xfd, 0x94, 0xce, 0x86, 0xab, 0xe9, 0x62, 0xee, 0x17, 0x10, 0xa1, 0xb9,
	0x1c, 0x46, 0xd1, 0xd3, 0x82, 0x8e, 0x9f, 0xe9, 0x24, 0x9a, 0xac, 0x7c, 0x8f, 0xdc, 0x41, 0xfb,
	0x27, 0xb1, 0xd1, 0x4a, 0x1a, 0x9e, 0x4a, 0xe3, 0xe9, 0x1a, 0x07, 0x69, 0x2e, 0xc1, 0x26, 0x14,
	0x45, 0xec, 0x54, 0x9d, 0xd3, 0xa2, 0x88, 0xc9, 0x03, 0xd4, 0x67, 0x4c, 0x6c, 0x8f, 0xf6, 0xf9,
	0x1b, 0x84, 0x08, 0x65, 0xc9, 0x76, 0x3c, 0x28, 0xb9, 0x26, 0x17, 0x93, 0x01, 0x34, 0x32, 0xa2,
	0x7c, 0xfc, 0x25, 0x54, 0x8d, 0x65, 0x76, 0x6f, 0x72, 0xaa, 0x3c, 0x4b, 0xb1, 0x6b, 0x15, 0x67,
	0xc6, 0x54, 0xa8, 0x8b, 0xfb, 0x5f, 0x1e, 0x94, 0x53, 0x30, 0xde, 0x82, 0x1f, 0x71, 0x19, 0x8f,
	0x94, 0xdc, 0x88, 0x64, 0xe7, 0xf6, 0x41, 0xdf, 0x79, 0x77, 0x24, 0xb2, 0xd3, 0x3a, 0xaa, 0x64,
	0xd3, 0x48, 0x01, 0x07, 0xd0, 0x4a, 0xa1, 0x4b, 0x66, 0xcc, 0xbb, 0x4a, 0x62, 0xca, 0x0d, 0xb7,
	0xff, 0xc5, 0x8e, 0xa1, 0xee, 0x2c, 0xfc, 0x58, 0xb9, 0xf3, 0x05, 0xbf, 0x5d, 0xab, 0x73, 0x75,
	0xe2, 0xe5, 0xc0, 0xf2, 0x52, 0x75, 0xff, 0xe5, 0xe6, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x90,
	0x5b, 0xa7, 0x3d, 0x02, 0x00, 0x00,
}
